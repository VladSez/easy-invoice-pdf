name: üé≠ Playwright E2E tests
on:
  deployment_status:

jobs:
  e2e:
    # https://vercel.com/guides/how-can-i-run-end-to-end-tests-after-my-vercel-preview-deployment
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success'

    name: Run e2e tests via ${{ github.event_name == 'deployment_status' && 'Vercel deployment' }}
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Environment URL - ${{ github.event_name == 'deployment_status' && github.event.deployment_status.environment_url }}"
      # we use pinned versions because there are safer to use: https://x.com/paulmillr/status/1900948425325031448
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        name: üõéÔ∏è Checkout repository

      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        name: üì¶ Setup pnpm

      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # 4.3.0
        name: üìö Setup Node.js
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: üöö Install dependencies
        run: pnpm install

      - name: üì¶ Install Playwright browser binaries & OS dependencies
        id: playwright-install
        run: |
          start_time=$(date +%s)

          pnpm exec playwright install chromium webkit --with-deps

          end_time=$(date +%s)
          duration=$((end_time - start_time))
          minutes=$((duration / 60))
          seconds=$((duration % 60))

          echo "duration_formatted=${minutes}m ${seconds}s" >> "$GITHUB_OUTPUT"

      - name: üé≠ Run Playwright tests
        id: playwright
        env:
          BASE_URL: ${{ github.event_name == 'deployment_status' && github.event.deployment_status.environment_url }}
          SENTRY_ENABLED: false
          NEXT_PUBLIC_SENTRY_ENABLED: false
          continue-on-error: true
        # calculate duration of the job and runs playwright test
        run: |
          start_time=$(date +%s)

          pnpm exec playwright test

          end_time=$(date +%s)
          duration=$((end_time - start_time))
          minutes=$((duration / 60))
          seconds=$((duration % 60))

          echo "duration_formatted=${minutes}m ${seconds}s" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 #4.6.1
        name: üé≤ Upload Playwright report
        if: always()
        with:
          name: playwright-report
          path: playwright-output/report/
          retention-days: 3

      - name: üìß Send email
        if: always()
        uses: dawidd6/action-send-mail@611879133a9569642c41be66f4a323286e9b8a3b # v4
        with:
          server_address: smtp.gmail.com
          server_port: 587
          from: GitHub Actions
          to: ${{ secrets.EMAIL_USERNAME }}
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: ${{ steps.playwright.outcome == 'success' && '‚úÖ E2E Tests Passed' || '‚ùå E2E Tests Failed' }} for ${{ github.repository }}
          body: |
            E2E tests for ${{ github.repository }} have completed.

            Result: ${{ steps.playwright.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}
            Playwright Browser Binaries Installation Time: ${{ steps.playwright-install.outputs.duration_formatted }}
            ${{ steps.playwright.outcome == 'success' && format('Playwright Tests Duration: {0}', steps.playwright.outputs.duration_formatted) }}

            For more details, please check:
            - GitHub Actions run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            - Pull Request: ${{ github.event.pull_request.html_url || 'Unknown' }}
          attachments: playwright-output/report/index.html
